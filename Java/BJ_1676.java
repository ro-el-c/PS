// 팩토리얼 0의 개수
// 500! 의 값은
// 따라서 팩토리얼 계산 값으로 해결할 수 없음
// 0부터 차례대로
// 0 0 0 0 0 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4 6 6 6 6 6 ...
// N을 2와 5가 짝지어지는 개수 = 뒤에서부터 처음 0이 아닌 숫자가 나올 때까지의 0의 개수
// 소인수분해 결과 항상 5의 개수가 2의 개수보다 적으므로,
// 5의 개수에 따라 값이 변한다.
// => N을 5로 나눈 몫을 누적해서 합한 결과를 출력하면 된다.

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class BJ_1676 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());

        int ans=0;
        while(N>=5){
            ans += N/5;
            N /= 5;
        }

        System.out.print(ans);
    }
}